executors:
  docker_large:
    docker:
    - image: nixos/nix:latest
    resource_class: large
jobs:
  setup:
    executor: docker_large
    shell: /tmp/python/bin/python
    steps:
    - checkout
    - run:
        command: |
          cat \<< 'EOF' >/etc/nix/nix.conf
          experimental-features = nix-command flakes ca-derivations
          cores = 4
          max-jobs = 2
          sandbox = false
          sandbox-fallback = true
          system-features = nixos-test benchmark big-parallel kvm
          substituters = https://cache.nixos.org/
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
          trusted-users = root circleci
          EOF
        name: Setup nix
        shell: /bin/sh
    - run:
        command: |
          nix run nixpkgs#attic-client -- login lt https://nix.leaningtech.com ${ATTIC_TOKEN}
          nix run nixpkgs#attic-client -- use lt:cheerp
        name: Setup Attic
        shell: /bin/sh
    - run:
        command: |
          nix build .#python --out-link /tmp/python
        name: Bootstrap shell
        shell: /bin/sh
    - run:
        command: |
          from circler.steps import cache_shell
          cache_shell()
        name: Cache python shell
    - run:
        command: |
          from circler.steps import nix_eval_jobs
          nix_eval_jobs('(import ./test/release.nix{})')
        name: Eval nix expression
    - run:
        command: |
          from circler.steps import cache_eval_jobs
          cache_eval_jobs()
        name: Cache eval jobs
    - run:
        command: |
          from circler.steps import generate_main_pipeline
          generate_main_pipeline()
        name: Generate main pipeline
    - run:
        command: |
          from circler.steps import continuation
          continuation()
        name: Trigger continuation
parameters: {}
setup: true
version: '2.1'
workflows:
  setup:
    jobs:
    - setup:
        requires: []

